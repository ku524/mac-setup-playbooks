- hosts: localhost
  tasks:
  - 
    name: install - zsh
    community.general.homebrew:
      name: zsh
      state: present
      update_homebrew: yes
  -
    name: install oh-my-zsh
    shell: sh -c $(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)
  - 
    name: install zsh plugin - zsh-syntax-highlighting
    ansible.builtin.git:
      repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
      dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  - 
    name: install zsh plugin - zsh-autosuggestions
    ansible.builtin.git:
      repo: 'https://github.com/zsh-users/zsh-autosuggestions'
      dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  - 
    name: install - lsd
    community.general.homebrew:
      name: lsd
      state: present
      update_homebrew: yes
  - 
    name: install - bat
    community.general.homebrew:
      name: bat
      state: present
      update_homebrew: yes
  - 
    name: install - autojump
    community.general.homebrew:
      name: autojump
      state: present
      update_homebrew: yes
  - 
    name: install - fd
    community.general.homebrew:
      name: fd
      state: present
      update_homebrew: yes
  - 
    name: install - fzf
    community.general.homebrew:
      name: fzf
      state: present
      update_homebrew: yes
  - 
    name: install - gping
    community.general.homebrew:
      name: gping
      state: present
      update_homebrew: yes
  - 
    name: install - curlie
    community.general.homebrew:
      name: rs/tap/curlie
      state: present
      update_homebrew: yes
  - 
    name: install - less
    community.general.homebrew:
      name: less
      state: latest
      update_homebrew: yes
  - 
    name: install - delta
    community.general.homebrew:
      name: git-delta
      state: present
      update_homebrew: yes
  - 
    name: install - dust
    community.general.homebrew:
      name: dust
      state: present
      update_homebrew: yes
  - 
    name: install - duf
    community.general.homebrew:
      name: duf
      state: present
      update_homebrew: yes
  - 
    name: install - broot
    community.general.homebrew:
      name: broot
      state: present
      update_homebrew: yes
  - 
    name: tab - mcfly
    community.general.homebrew_tap:
      name: cantino/mcfly
  - 
    name: install - mcfly
    community.general.homebrew:
      name: mcfly
      state: present
      update_homebrew: yes
  - 
    name: install - zoxide
    community.general.homebrew:
      name: zoxide
      state: present
      update_homebrew: yes
  - 
    name: install - dog
    community.general.homebrew:
      name: dog
      state: present
      update_homebrew: yes
  - 
    name: install - xh
    community.general.homebrew:
      name: xh
      state: present
      update_homebrew: yes
  - 
    name: install - pet
    community.general.homebrew:
      name: knqyf263/pet/pet
      state: present
      update_homebrew: yes
  - 
    name: configure pet in zshrc
    blockinfile:
      path: ~/.zshrc
      marker_begin: PET BEGIN
      marker_end: PET END
      block: |
        function prev() {
          PREV=$(fc -lrn | head -n 1)
          sh -c "pet new `printf %q "$PREV"`"
        }
        function pet-select() {
          BUFFER=$(pet search --query "$LBUFFER")
          CURSOR=$#BUFFER
          zle redisplay
        }
        zle -N pet-select
        stty -ixon
        bindkey '^s' pet-select
      create: yes
  - 
    name: configure pet sync - PAT
    ansible.builtin.lineinfile:
      path: ~/.config/pet/config.toml
      firstmatch: yes
      regexp: '^  access_token = '
      line: "  access_token = \"{{ pet_PAT }}\""
      create: yes
  - 
    name: configure pet sync - gist_id
    ansible.builtin.lineinfile:
      path: ~/.config/pet/config.toml
      firstmatch: yes
      regexp: '^  gist_id = '
      line: "  gist_id = \"{{ pet_gist_id }}\""
      create: yes
  - 
    name: configure pet sync - auto_sync
    ansible.builtin.lineinfile:
      path: ~/.config/pet/config.toml
      firstmatch: yes
      regexp: '^  auto_sync = '
      line: "  auto_sync = true"
      create: yes
  - 
    name: configure zsh theme - agnoster
    ansible.builtin.lineinfile:
      path: ~/.zshrc
      regexp: '^ZSH_THEME='
      line: ZSH_THEME="agnoster"
      create: yes
  - 
    name: configure zsh plugins - git autojump zsh-autosuggestions zsh-syntax-highlighting fzf
    ansible.builtin.lineinfile:
      path: ~/.zshrc
      regexp: '^plugins='
      line: |
        plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting fzf)      
      create: 
  - 
    name: configure git
    blockinfile:
      path: ~/.gitconfig
      block: |
        [pager]
            diff = delta
            log = delta
            reflog = delta
            show = delta

        [delta]
            features = side-by-side line-numbers decorations
            syntax-theme = Dracula
            plus-style = syntax "#003800"
            minus-style = syntax "#3f0001"

        [delta "decorations"]
            commit-decoration-style = bold yellow box ul
            file-style = bold yellow ul
            file-decoration-style = none
            hunk-header-decoration-style = cyan box ul

        [delta "line-numbers"]
            line-numbers-left-style = cyan
            line-numbers-right-style = cyan
            line-numbers-minus-style = 124
            line-numbers-plus-style = 28

        [interactive]
            diffFilter = delta --color-only
  - 
    name: configure aliases
    blockinfile:
      path: ~/.zshrc
      block: |
        code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
        alias k="kubectl"
        alias ls="lsd --no-symlink"
        alias ll="lsd -l --no-symlink"
        alias lt="lsd --tree --no-symlink"
        alias cat="bat"
        alias gs="git status"
        alias du="dust"
        alias df="duf"
        alias ping="gping"
        alias curl="curlie"
        alias a="aws-vault"
        alias top="htop"
        alias master="git checkout master"
        alias main="git checkout main"
        alias t="terraform"
        alias ti="terraform init"
        alias tp="terraform plan"
        alias ta="terraform apply"
        export FZF_DEFAULT_COMMAND='fd - type f'
        export MANPAGER="sh -c 'col -bx | bat -l man -p'"
        export MCFLY_RESULTS=15
        export MCFLY_FUZZY=true
        eval "$(mcfly init zsh)"
        eval "$(zoxide init zsh --cmd z)"
        source <(curl -sSL git.io/forgit)

